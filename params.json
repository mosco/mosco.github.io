{
  "name": "Mosco.GitHub.io",
  "tagline": "Homepage",
  "body": "\r\nI am a Ph.D. candidate at the department of Computer Science and Applied Mathematics at the Weizmann Institute of Science, working with Prof. Boaz Nadler. My research interests are in the theory of Statistics and Machine Learning, specifically in the development of new statistical tools and computational methods.\r\n\r\ncontact: moscovich (at gmail.com), office: 124, Ziskind building, Weizmann Institute of Science.\r\n\r\n# Research\r\n\r\n\r\n## Boundary crossing\r\nConsider a one-dimensional homogeneous [Poisson process](http://en.wikipedia.org/wiki/Poisson_process). How can we compute the boundary crossing probability of this process, given arbitrary boundaries from above and below? Previously known methods can compute this probability in O(n^3) time, where **n** is an upper bound on the boundary functions. In this work, we present a faster O(n^2 log n) algorithm.\r\nPreprint [submitted]: [Fast calculation of boundary crossing probabilities for Poisson processes](http://arxiv.org/abs/1503.04363)\r\nCo-author: [Boaz Nadler](http://www.wisdom.weizmann.ac.il/~nadler/)\r\n\r\nPoster presented at the wonderful [MLSS 2015 Kyoto](http://www.iip.ist.i.kyoto-u.ac.jp/mlss15):\r\n    [PDF](crossprob/crossing_probability_poster_mlss2015.pdf)\r\n    [LaTeX](crossprob/crossing_probability_poster_mlss2015.tex)\r\nThis method has several potential applications, mainly in statistics, including the computation of exact p-values for continuous goodness-of-fit tests.\r\n\r\nA fast C++ implementation of the algorithms discussed in the paper is available on github: [crossing-probability](http://github.com/mosco/crossing-probability)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}